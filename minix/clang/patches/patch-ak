$NetBSD$

--- tools/clang/lib/Driver/Tools.cpp.orig	Fri Feb 18 17:53:10 2011
+++ tools/clang/lib/Driver/Tools.cpp
@@ -2892,7 +2892,7 @@ void auroraux::Assemble::ConstructJob(Compilation &C, 
   }
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("gas"));
+    Args.MakeArgString(getToolChain().GetProgramPath("as"));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -3658,7 +3658,11 @@ void minix::Assemble::ConstructJob(Compilation &C, con
   }
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("gas"));
+#if 1
+    Args.MakeArgString(getToolChain().GetProgramPath("i386-pc-minix3-as"));
+#else
+    Args.MakeArgString(getToolChain().GetProgramPath("as"));
+#endif
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -3678,9 +3682,14 @@ void minix::Link::ConstructJob(Compilation &C, const J
   }
 
   if (!Args.hasArg(options::OPT_nostdlib) &&
-      !Args.hasArg(options::OPT_nostartfiles))
-    CmdArgs.push_back(Args.MakeArgString(getToolChain().GetFilePath(
-                                                      "/usr/gnu/lib/crtso.o")));
+      !Args.hasArg(options::OPT_nostartfiles)) {
+      CmdArgs.push_back(
+	 Args.MakeArgString(getToolChain().GetFilePath("crt1.o")));
+      CmdArgs.push_back(
+	 Args.MakeArgString(getToolChain().GetFilePath("crti.o")));
+      CmdArgs.push_back(
+	 Args.MakeArgString(getToolChain().GetFilePath("crtn.o")));
+  }
 
   Args.AddAllArgs(CmdArgs, options::OPT_L);
   Args.AddAllArgs(CmdArgs, options::OPT_T_Group);
@@ -3698,21 +3707,22 @@ void minix::Link::ConstructJob(Compilation &C, const J
     if (Args.hasArg(options::OPT_pthread))
       CmdArgs.push_back("-lpthread");
     CmdArgs.push_back("-lc");
-    CmdArgs.push_back("-lgcc");
-    CmdArgs.push_back("-L/usr/gnu/lib");
-    // FIXME: fill in the correct search path for the final
-    // support libraries.
-    CmdArgs.push_back("-L/usr/gnu/lib/gcc/i686-pc-minix/4.4.3");
+    CmdArgs.push_back("-lCompilerRT-Generic");
+    CmdArgs.push_back("-L/usr/pkg/lib");
   }
 
   if (!Args.hasArg(options::OPT_nostdlib) &&
       !Args.hasArg(options::OPT_nostartfiles)) {
     CmdArgs.push_back(Args.MakeArgString(getToolChain().GetFilePath(
-                                              "/usr/gnu/lib/libend.a")));
+                                              "/usr/lib/libend.a")));
   }
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("/usr/gnu/bin/gld"));
+#if 0
+    Args.MakeArgString(getToolChain().GetProgramPath("/usr/gnu_cross/bin/i386-pc-minix3-ld"));
+#else
+    Args.MakeArgString(getToolChain().GetProgramPath("/usr/pkg/bin/ld"));
+#endif
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
