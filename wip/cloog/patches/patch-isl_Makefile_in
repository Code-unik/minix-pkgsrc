--- isl/Makefile.in.orig	Tue Aug  2 01:54:16 2011
+++ isl/Makefile.in	Tue Aug  2 01:57:13 2011
@@ -40,7 +40,7 @@
 noinst_PROGRAMS = isl_test$(EXEEXT) isl_polyhedron_sample$(EXEEXT) \
 	isl_pip$(EXEEXT) isl_polyhedron_minimize$(EXEEXT) \
 	isl_polytope_scan$(EXEEXT) \
-	isl_polyhedron_detect_equalities$(EXEEXT) isl_cat$(EXEEXT) \
+	isl_poly_de$(EXEEXT) isl_cat$(EXEEXT) \
 	isl_closure$(EXEEXT) isl_bound$(EXEEXT)
 TESTS = isl_test$(EXEEXT) pip_test.sh bound_test.sh
 subdir = .
@@ -167,10 +167,10 @@
 am_isl_pip_OBJECTS = isl_pip-pip.$(OBJEXT)
 isl_pip_OBJECTS = $(am_isl_pip_OBJECTS)
 isl_pip_DEPENDENCIES = libisl.la
-am_isl_polyhedron_detect_equalities_OBJECTS = isl_polyhedron_detect_equalities-polyhedron_detect_equalities.$(OBJEXT)
-isl_polyhedron_detect_equalities_OBJECTS =  \
-	$(am_isl_polyhedron_detect_equalities_OBJECTS)
-isl_polyhedron_detect_equalities_DEPENDENCIES = libisl.la
+am_isl_poly_de_OBJECTS = isl_poly_de-polyhedron_detect_equalities.$(OBJEXT)
+isl_poly_de_OBJECTS =  \
+	$(am_isl_poly_de_OBJECTS)
+isl_poly_de_DEPENDENCIES = libisl.la
 am_isl_polyhedron_minimize_OBJECTS =  \
 	isl_polyhedron_minimize-polyhedron_minimize.$(OBJEXT)
 isl_polyhedron_minimize_OBJECTS =  \
@@ -202,14 +202,14 @@
 	$(LDFLAGS) -o $@
 SOURCES = $(libisl_la_SOURCES) $(EXTRA_libisl_la_SOURCES) \
 	$(isl_bound_SOURCES) $(isl_cat_SOURCES) $(isl_closure_SOURCES) \
-	$(isl_pip_SOURCES) $(isl_polyhedron_detect_equalities_SOURCES) \
+	$(isl_pip_SOURCES) $(isl_poly_de_SOURCES) \
 	$(isl_polyhedron_minimize_SOURCES) \
 	$(isl_polyhedron_sample_SOURCES) $(isl_polytope_scan_SOURCES) \
 	isl_test.c
 DIST_SOURCES = $(am__libisl_la_SOURCES_DIST) \
 	$(EXTRA_libisl_la_SOURCES) $(isl_bound_SOURCES) \
 	$(isl_cat_SOURCES) $(isl_closure_SOURCES) $(isl_pip_SOURCES) \
-	$(isl_polyhedron_detect_equalities_SOURCES) \
+	$(isl_poly_de_SOURCES) \
 	$(isl_polyhedron_minimize_SOURCES) \
 	$(isl_polyhedron_sample_SOURCES) $(isl_polytope_scan_SOURCES) \
 	isl_test.c
@@ -528,9 +528,9 @@
 isl_polytope_scan_SOURCES = \
 	polytope_scan.c
 
-isl_polyhedron_detect_equalities_CPPFLAGS = $(INCLUDES) @GMP_CPPFLAGS@
-isl_polyhedron_detect_equalities_LDADD = libisl.la
-isl_polyhedron_detect_equalities_SOURCES = \
+isl_poly_de_CPPFLAGS = $(INCLUDES) @GMP_CPPFLAGS@
+isl_poly_de_LDADD = libisl.la
+isl_poly_de_SOURCES = \
 	polyhedron_detect_equalities.c
 
 isl_cat_CPPFLAGS = $(INCLUDES) @GMP_CPPFLAGS@
@@ -714,9 +714,9 @@
 isl_pip$(EXEEXT): $(isl_pip_OBJECTS) $(isl_pip_DEPENDENCIES) 
 	@rm -f isl_pip$(EXEEXT)
 	$(LINK) $(isl_pip_OBJECTS) $(isl_pip_LDADD) $(LIBS)
-isl_polyhedron_detect_equalities$(EXEEXT): $(isl_polyhedron_detect_equalities_OBJECTS) $(isl_polyhedron_detect_equalities_DEPENDENCIES) 
-	@rm -f isl_polyhedron_detect_equalities$(EXEEXT)
-	$(LINK) $(isl_polyhedron_detect_equalities_OBJECTS) $(isl_polyhedron_detect_equalities_LDADD) $(LIBS)
+isl_poly_de$(EXEEXT): $(isl_poly_de_OBJECTS) $(isl_poly_de_DEPENDENCIES) 
+	@rm -f isl_poly_de$(EXEEXT)
+	$(LINK) $(isl_poly_de_OBJECTS) $(isl_poly_de_LDADD) $(LIBS)
 isl_polyhedron_minimize$(EXEEXT): $(isl_polyhedron_minimize_OBJECTS) $(isl_polyhedron_minimize_DEPENDENCIES) 
 	@rm -f isl_polyhedron_minimize$(EXEEXT)
 	$(LINK) $(isl_polyhedron_minimize_OBJECTS) $(isl_polyhedron_minimize_LDADD) $(LIBS)
@@ -740,7 +740,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_cat-cat.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_closure-closure.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_pip-pip.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_polyhedron_detect_equalities-polyhedron_detect_equalities.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_poly_de-polyhedron_detect_equalities.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_polyhedron_minimize-polyhedron_minimize.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_polyhedron_sample-polyhedron_sample.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isl_polytope_scan-polytope_scan.Po@am__quote@
@@ -1263,19 +1263,19 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_pip_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isl_pip-pip.obj `if test -f 'pip.c'; then $(CYGPATH_W) 'pip.c'; else $(CYGPATH_W) '$(srcdir)/pip.c'; fi`
 
-isl_polyhedron_detect_equalities-polyhedron_detect_equalities.o: polyhedron_detect_equalities.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_polyhedron_detect_equalities_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isl_polyhedron_detect_equalities-polyhedron_detect_equalities.o -MD -MP -MF $(DEPDIR)/isl_polyhedron_detect_equalities-polyhedron_detect_equalities.Tpo -c -o isl_polyhedron_detect_equalities-polyhedron_detect_equalities.o `test -f 'polyhedron_detect_equalities.c' || echo '$(srcdir)/'`polyhedron_detect_equalities.c
-@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/isl_polyhedron_detect_equalities-polyhedron_detect_equalities.Tpo $(DEPDIR)/isl_polyhedron_detect_equalities-polyhedron_detect_equalities.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='polyhedron_detect_equalities.c' object='isl_polyhedron_detect_equalities-polyhedron_detect_equalities.o' libtool=no @AMDEPBACKSLASH@
+isl_poly_de-polyhedron_detect_equalities.o: polyhedron_detect_equalities.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_poly_de_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isl_poly_de-polyhedron_detect_equalities.o -MD -MP -MF $(DEPDIR)/isl_poly_de-polyhedron_detect_equalities.Tpo -c -o isl_poly_de-polyhedron_detect_equalities.o `test -f 'polyhedron_detect_equalities.c' || echo '$(srcdir)/'`polyhedron_detect_equalities.c
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/isl_poly_de-polyhedron_detect_equalities.Tpo $(DEPDIR)/isl_poly_de-polyhedron_detect_equalities.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='polyhedron_detect_equalities.c' object='isl_poly_de-polyhedron_detect_equalities.o' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_polyhedron_detect_equalities_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isl_polyhedron_detect_equalities-polyhedron_detect_equalities.o `test -f 'polyhedron_detect_equalities.c' || echo '$(srcdir)/'`polyhedron_detect_equalities.c
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_poly_de_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isl_poly_de-polyhedron_detect_equalities.o `test -f 'polyhedron_detect_equalities.c' || echo '$(srcdir)/'`polyhedron_detect_equalities.c
 
-isl_polyhedron_detect_equalities-polyhedron_detect_equalities.obj: polyhedron_detect_equalities.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_polyhedron_detect_equalities_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isl_polyhedron_detect_equalities-polyhedron_detect_equalities.obj -MD -MP -MF $(DEPDIR)/isl_polyhedron_detect_equalities-polyhedron_detect_equalities.Tpo -c -o isl_polyhedron_detect_equalities-polyhedron_detect_equalities.obj `if test -f 'polyhedron_detect_equalities.c'; then $(CYGPATH_W) 'polyhedron_detect_equalities.c'; else $(CYGPATH_W) '$(srcdir)/polyhedron_detect_equalities.c'; fi`
-@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/isl_polyhedron_detect_equalities-polyhedron_detect_equalities.Tpo $(DEPDIR)/isl_polyhedron_detect_equalities-polyhedron_detect_equalities.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='polyhedron_detect_equalities.c' object='isl_polyhedron_detect_equalities-polyhedron_detect_equalities.obj' libtool=no @AMDEPBACKSLASH@
+isl_poly_de-polyhedron_detect_equalities.obj: polyhedron_detect_equalities.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_poly_de_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isl_poly_de-polyhedron_detect_equalities.obj -MD -MP -MF $(DEPDIR)/isl_poly_de-polyhedron_detect_equalities.Tpo -c -o isl_poly_de-polyhedron_detect_equalities.obj `if test -f 'polyhedron_detect_equalities.c'; then $(CYGPATH_W) 'polyhedron_detect_equalities.c'; else $(CYGPATH_W) '$(srcdir)/polyhedron_detect_equalities.c'; fi`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/isl_poly_de-polyhedron_detect_equalities.Tpo $(DEPDIR)/isl_poly_de-polyhedron_detect_equalities.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='polyhedron_detect_equalities.c' object='isl_poly_de-polyhedron_detect_equalities.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_polyhedron_detect_equalities_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isl_polyhedron_detect_equalities-polyhedron_detect_equalities.obj `if test -f 'polyhedron_detect_equalities.c'; then $(CYGPATH_W) 'polyhedron_detect_equalities.c'; else $(CYGPATH_W) '$(srcdir)/polyhedron_detect_equalities.c'; fi`
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_poly_de_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o isl_poly_de-polyhedron_detect_equalities.obj `if test -f 'polyhedron_detect_equalities.c'; then $(CYGPATH_W) 'polyhedron_detect_equalities.c'; else $(CYGPATH_W) '$(srcdir)/polyhedron_detect_equalities.c'; fi`
 
 isl_polyhedron_minimize-polyhedron_minimize.o: polyhedron_minimize.c
 @am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(isl_polyhedron_minimize_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT isl_polyhedron_minimize-polyhedron_minimize.o -MD -MP -MF $(DEPDIR)/isl_polyhedron_minimize-polyhedron_minimize.Tpo -c -o isl_polyhedron_minimize-polyhedron_minimize.o `test -f 'polyhedron_minimize.c' || echo '$(srcdir)/'`polyhedron_minimize.c
