$NetBSD$

--- bfd/elf.c.orig	Sun Feb 17 23:45:23 2008
+++ bfd/elf.c
@@ -8047,6 +8047,40 @@ elfcore_grok_netbsd_note (bfd *abfd, Elf_Internal_Note
 }
 
 static bfd_boolean
+elfcore_grok_minix_elfcoreinfo (bfd *abfd, Elf_Internal_Note *note)
+{
+  /* Signal number at offset 0x08. */
+  elf_tdata (abfd)->core_signal
+    = bfd_h_get_32 (abfd, (bfd_byte *) note->descdata + 0x08);
+
+  /* Process ID at offset 0x0C. */
+  elf_tdata (abfd)->core_pid
+    = bfd_h_get_32 (abfd, (bfd_byte *) note->descdata + 0x0C);
+
+  /* Command name at 0x10 (max 32 bytes, including nul). */
+  elf_tdata (abfd)->core_command
+    = _bfd_elfcore_strndup (abfd, note->descdata + 0x10, 31);
+
+  return elfcore_make_note_pseudosection (abfd, ".note.minix.elfcoreinfo",
+					  note);
+}
+
+static bfd_boolean
+elfcore_grok_minix_note (bfd *abfd, Elf_Internal_Note *note)
+{
+  switch (note->type) 
+    {
+    case NT_MINIX_ELFCORE_INFO:
+      return elfcore_grok_minix_elfcoreinfo (abfd, note);
+    case NT_MINIX_ELFCORE_GREGS:
+      return elfcore_make_note_pseudosection (abfd, ".reg", note);
+    default:
+      return TRUE;
+    }
+    /* NOTREACHED */
+}
+
+static bfd_boolean
 elfcore_grok_nto_status (bfd *abfd, Elf_Internal_Note *note, long *tid)
 {
   void *ddata = note->descdata;
@@ -8501,6 +8535,11 @@ elf_parse_notes (bfd *abfd, char *buf, size_t size, fi
 	  else if (CONST_STRNEQ (in.namedata, "SPU/"))
 	    {
 	      if (! elfcore_grok_spu_note (abfd, &in))
+		return FALSE;
+	    }
+          else if (CONST_STRNEQ (in.namedata, "MINIX-CORE"))
+	    {
+	      if (! elfcore_grok_minix_note (abfd, &in))
 		return FALSE;
 	    }
 	  else
